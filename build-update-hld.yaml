trigger:
  branches:
    include:
      - master
  paths:
    include:
      - ./services/fabrikam.acme.frontend
variables:
  - group: fabrikam-vg
stages:
  - stage: build
    jobs:
      - job: run_build_push_acr
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |-
              set -e
              echo "az login --service-principal --username $(SP_APP_ID) --password $(SP_PASS) --tenant $(SP_TENANT)"
              az login --service-principal --username "$(SP_APP_ID)" --password "$(SP_PASS)" --tenant "$(SP_TENANT)"
            displayName: Azure Login
          - script: |-
              set -e
              export BUILD_REPO_NAME=$(echo $(Build.Repository.Name)-fabrikam.acme.frontend | tr '[:upper:]' '[:lower:]')
              tag_name="$BUILD_REPO_NAME:$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)"
              commitId=$(Build.SourceVersion)
              commitId=$(echo "${commitId:0:7}")
              service=$(Build.Repository.Name)
              service=${service##*/}
              echo "Downloading SPK"
              curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
              chmod +x build.sh
              . ./build.sh --source-only
              get_spk_version
              download_spk
              ./spk/spk deployment create -n $(INTROSPECTION_ACCOUNT_NAME) -k $(INTROSPECTION_ACCOUNT_KEY) -t $(INTROSPECTION_TABLE_NAME) -p $(INTROSPECTION_PARTITION_KEY) --p1 $(Build.BuildId) --image-tag $tag_name --commit-id $commitId --service $service
            displayName: 'If configured, update Spektate storage with build pipeline'
            condition: 'and(ne(variables[''INTROSPECTION_ACCOUNT_NAME''], ''''), ne(variables[''INTROSPECTION_ACCOUNT_KEY''], ''''),ne(variables[''INTROSPECTION_TABLE_NAME''], ''''),ne(variables[''INTROSPECTION_PARTITION_KEY''], ''''))'
          - script: |-
              set -e
              export BUILD_REPO_NAME=$(echo $(Build.Repository.Name)-fabrikam.acme.frontend | tr '[:upper:]' '[:lower:]')
              echo "Image Name: $BUILD_REPO_NAME"
              cd ./services/fabrikam.acme.frontend
              echo "az acr build -r $(ACR_NAME) --image $BUILD_REPO_NAME:$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber) --file ../Dockerfiles/some-other-Dockerfile ."
              az acr build -r $(ACR_NAME) --image $BUILD_REPO_NAME:$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber) .
            displayName: ACR Build and Publish
  - stage: hld_update
    dependsOn: build
    condition: succeeded('build')
    jobs:
      - job: update_image_tag
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |-
              set -e
              # Download build.sh
              curl $BEDROCK_BUILD_SCRIPT > build.sh
              chmod +x ./build.sh
            displayName: Download bedrock bash scripts
            env:
              BEDROCK_BUILD_SCRIPT: $(BUILD_SCRIPT_URL)
          - script: |-
              set -e
              export SERVICE_NAME_LOWER=$(echo fabrikam.acme.frontend | tr '[:upper:]' '[:lower:]')
              export BUILD_REPO_NAME=$(echo $(Build.Repository.Name)-fabrikam.acme.frontend | tr '[:upper:]' '[:lower:]')
              export BRANCH_NAME=DEPLOY/$BUILD_REPO_NAME-$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)
              export FAB_SAFE_SERVICE_NAME=$(SERVICE_NAME_LOWER | tr . - | tr / -)
              # --- From https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/release.sh
              . build.sh --source-only

              # Initialization
              verify_access_token
              init
              helm_init

              # Fabrikate
              get_fab_version
              download_fab

              # Clone HLD repo
              git_connect
              # --- End Script

              # Update HLD
              git checkout -b "$BRANCH_NAME"
              ../fab/fab set --subcomponent $(Build.Repository.Name).$FAB_SAFE_SERVICE_NAME.$(echo $(Build.SourceBranchName) | tr / - | tr . -).chart image.tag=$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)
              echo "GIT STATUS"
              git status
              echo "GIT ADD (git add -A)"
              git add -A

              # Set git identity
              git config user.email "admin@azuredevops.com"
              git config user.name "Automated Account"

              # Commit changes
              echo "GIT COMMIT"
              git commit -m "Updating $SERVICE_NAME_LOWER image tag to $(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)."

              # Git Push
              git_push

              # Open PR via az repo cli
              echo 'az extension add --name azure-devops'
              az extension add --name azure-devops

              echo 'az repos pr create --description "Updating $SERVICE_NAME_LOWER to $(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)." "PR created by: $(Build.DefinitionName) with buildId: $(Build.BuildId) and buildNumber: $(Build.BuildNumber)"'
              response=$(az repos pr create --description "Updating $SERVICE_NAME_LOWER to $(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)." "PR created by: $(Build.DefinitionName) with buildId: $(Build.BuildId) and buildNumber: $(Build.BuildNumber)")
              pr_id=$(echo $response | jq -r '.pullRequestId')


              # Update introspection storage with this information, if applicable
              if [ -z "$(INTROSPECTION_ACCOUNT_NAME)" -o -z "$(INTROSPECTION_ACCOUNT_KEY)" -o -z "$(INTROSPECTION_TABLE_NAME)" -o -z "$(INTROSPECTION_PARTITION_KEY)" ]; then
              echo "Introspection variables are not defined. Skipping..."
              else
              latest_commit=$(git rev-parse --short HEAD)
              tag_name="$BUILD_REPO_NAME:$(echo $(Build.SourceBranchName) | tr / - | tr . -)-$(Build.BuildNumber)"
              echo "Downloading SPK"
              curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
              chmod +x build.sh
              . ./build.sh --source-only
              get_spk_version
              download_spk
              ./spk/spk deployment create  -n $(INTROSPECTION_ACCOUNT_NAME) -k $(INTROSPECTION_ACCOUNT_KEY) -t $(INTROSPECTION_TABLE_NAME) -p $(INTROSPECTION_PARTITION_KEY) --p2 $(Build.BuildId) --hld-commit-id $latest_commit --env $BRANCH_NAME --image-tag $tag_name --pr $pr_id
              fi
            displayName: 'Download Fabrikate, Update HLD, Push changes, Open PR, and if configured, push to Spektate storage'
            env:
              ACCESS_TOKEN_SECRET: $(PAT)
              AZURE_DEVOPS_EXT_PAT: $(PAT)
              REPO: $(HLD_REPO)
